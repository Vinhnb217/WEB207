{"ast":null,"code":"var _jsxFileName = \"E:\\\\PT14312-Web\\\\K\\u1EF3 6\\\\F\\\\react-basic-PT14312\\\\src\\\\pages\\\\views\\\\Admin\\\\Products\\\\EditProducts.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Category from \"../Category\";\nimport Swal from \"sweetalert2\";\n\nconst EditProduct = ({\n  products,\n  onUpdate,\n  category\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let product = products.find(data => data.id == id);\n  const [currentProduct, setCurrentProduct] = useState(product);\n  console.log(currentProduct);\n\n  const onHandleSubmit = e => {\n    Swal.fire(\"Updated!\", \"Your file has been updated.\", \"success\"); //   e.preventDefault();\n\n    onUpdate(currentProduct);\n    history.push(\"/admin/products\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentProduct({ ...currentProduct,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"S\\u1EEDa s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: currentProduct.name,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputProductImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Danh m\\u1EE5c s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    name: \"category_id\",\n    defaultValue: currentProduct.category_id,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, category && category.map(({\n    id,\n    name\n  }, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"\\u1EA2nh s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: currentProduct.image,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Gi\\xE1 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: currentProduct.price,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), errors.price && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 28\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"desc\",\n    defaultValue: currentProduct.desc,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), errors.desc && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nEditProduct.propTypes = {\n  products: PropTypes.array\n};\nexport default EditProduct;","map":{"version":3,"sources":["E:/PT14312-Web/Ká»³ 6/F/react-basic-PT14312/src/pages/views/Admin/Products/EditProducts.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","Category","Swal","EditProduct","products","onUpdate","category","register","handleSubmit","errors","id","history","product","find","data","currentProduct","setCurrentProduct","console","log","onHandleSubmit","e","fire","push","onHandleChange","name","value","target","required","category_id","map","index","image","price","desc","color","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Category from \"../Category\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst EditProduct = ({ products, onUpdate, category }) => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  let product = products.find((data) => data.id == id);\r\n  const [currentProduct, setCurrentProduct] = useState(product);\r\n  console.log(currentProduct);\r\n  const onHandleSubmit = (e) => {\r\n    Swal.fire(\"Updated!\", \"Your file has been updated.\", \"success\");\r\n\r\n    //   e.preventDefault();\r\n    onUpdate(currentProduct);\r\n    history.push(\"/admin/products\");\r\n  };\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentProduct({\r\n      ...currentProduct,\r\n      [name]: value,\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\">\r\n        <div className=\"form-group\">\r\n          <h3 className=\"card-title\">Sá»­a sáº£n pháº©m</h3>\r\n          <label htmlFor=\"productName\">TÃªn sáº£n pháº©m</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={currentProduct.name}\r\n            onChange={onHandleChange}\r\n            className=\"form-control\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.name && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <label htmlFor=\"inputProductImage\">Danh má»¥c sáº£n pháº©m</label>\r\n        <select\r\n          type=\"text\"\r\n          name=\"category_id\"\r\n          defaultValue={currentProduct.category_id}\r\n          onChange={onHandleChange}\r\n          className=\"form-control\"\r\n          ref={register({ required: true })}\r\n        >\r\n          {category &&\r\n            category.map(({ id, name }, index) => (\r\n              <option value={id}>{name}</option>\r\n            ))}\r\n        </select>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productName\">áº¢nh sáº£n pháº©m</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"image\"\r\n            value={currentProduct.image}\r\n            onChange={onHandleChange}\r\n            className=\"form-control\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.image && <span>This field is required</span>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productName\">GiÃ¡ sáº£n pháº©m</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={currentProduct.price}\r\n            onChange={onHandleChange}\r\n            className=\"form-control\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.price && <span>This field is required</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"productName\">MÃ´ táº£ sáº£n pháº©m</label>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"desc\"\r\n            defaultValue={currentProduct.desc}\r\n            onChange={onHandleChange}\r\n            className=\"form-control\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        {errors.desc && (\r\n          <span style={{ color: \"red\" }}>\r\n            MÃ´ táº£ sáº£n pháº©m khÃ´ng ÄÆ°á»£c Äá» trá»ng\r\n          </span>\r\n        )}\r\n\r\n        <button className=\"btn btn-primary\">Cáº­p nháº­t</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nEditProduct.propTypes = {\r\n  products: PropTypes.array,\r\n};\r\n\r\nexport default EditProduct;\r\n"]},"metadata":{},"sourceType":"module"}