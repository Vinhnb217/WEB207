{"ast":null,"code":"var _jsxFileName = \"E:\\\\PT14312-Web\\\\K\\u1EF3 6\\\\F\\\\react-basic-PT14312\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Routers from \"./routers\";\nimport apiRequest from \"./api/productApi\";\nimport categoryApi from \"./api/categoryApi\";\nimport postApi from \"./api/postApi\"; // import { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const [products, setProducts] = useState([apiRequest]);\n  const [category, setCategory] = useState([categoryApi]);\n  const [post, setPost] = useState([postApi]); // let history = useHistory();\n  // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    console.log(product);\n\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Cập nhật Products\n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; //Category \n\n\n  useEffect(() => {\n    const getCatetogory = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategory(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getCatetogory();\n  }, []); // Add category\n\n  const onHandleAddCategory = async categories => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(categories);\n      setCategory([...category, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //Del category\n\n\n  const onHandleRemoveCategory = async id => {\n    try {\n      const {\n        data\n      } = await categoryApi.remove(id);\n      const newCategory = category.filter(categories => categories.id !== id);\n      setCategory(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //Edit category\n\n\n  const onHandleUpdateCategory = async updateCategory => {\n    const newCategories = category.map(Category => Category.id === updateCategory.id ? updateCategory : Category // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await categoryApi.update(updateCategory.id, updateCategory);\n    setCategory(newCategories);\n  }; //Post\n  //List post\n\n\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const {\n          data\n        } = await postApi.getAll();\n        setPost(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getPost();\n  }, []); //Xóa bài viết\n  // Xóa sản phẩm\n\n  const onHandleRemovePost = async id => {\n    try {\n      const {\n        data\n      } = await postApi.remove(id);\n      const newPost = post.filter(posts => posts.id !== id);\n      setPost(newPost);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm bài viết\n\n\n  const onAddPost = async post => {\n    console.log(post);\n\n    try {\n      const {\n        data\n      } = await postApi.create(post);\n      setPost([...post, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    onAddCategory: onHandleAddCategory,\n    onRemoveCategory: onHandleRemoveCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    category: category,\n    post: post,\n    onRemovePost: onHandleRemovePost,\n    onAddPost: onHandleAddPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["E:/PT14312-Web/Kỳ 6/F/react-basic-PT14312/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","categoryApi","postApi","App","products","setProducts","category","setCategory","post","setPost","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","onHandleAdd","create","onHandleUpdate","updateProducts","map","Products","update","getCatetogory","onHandleAddCategory","categories","onHandleRemoveCategory","newCategory","onHandleUpdateCategory","updateCategory","newCategories","Category","getPost","onHandleRemovePost","newPost","posts","onAddPost","onHandleAddPost"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Routers from \"./routers\";\nimport apiRequest from \"./api/productApi\";\nimport categoryApi from \"./api/categoryApi\";\nimport postApi from \"./api/postApi\";\n// import { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const [products, setProducts] = useState([apiRequest]);\n  const [category, setCategory] = useState([categoryApi]);\n  const [post, setPost] = useState([postApi]);\n  // let history = useHistory();\n\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n    getProducts();\n  }, []);\n\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    console.log(product)\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n\n  // Cập nhật Products\n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n\n  //Category \n   \n    useEffect(() => {\n      const getCatetogory = async () => {\n        try {\n          const { data } = await categoryApi.getAll();\n          setCategory(data);\n        } catch (error) {\n          console.log(\"failed to request API: \", error);\n        }\n      };\n      getCatetogory();\n    }, []);\n\n  // Add category\n      const onHandleAddCategory = async (categories) => {\n        try {\n          const { data } = await categoryApi.create(categories);\n          setCategory([...category, data]);\n        } catch (error) {\n          console.log(\"failed to request API: \", error);\n        }\n          };\n  //Del category\n  const onHandleRemoveCategory = async (id) => {\n    try {\n      const { data } = await categoryApi.remove(id);\n      const newCategory = category.filter((categories) => categories.id !== id);\n      setCategory(newCategory);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //Edit category\n  const  onHandleUpdateCategory = async (updateCategory) => {\n    const newCategories = category.map(\n      (Category) =>\n      Category.id === updateCategory.id ? updateCategory : Category // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await categoryApi.update(updateCategory.id, updateCategory);\n    setCategory(newCategories);\n  };\n      //Post\n      //List post\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const { data } = await postApi.getAll();\n        setPost(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n    getPost();\n  }, []);\n      //Xóa bài viết\n       // Xóa sản phẩm\n  const onHandleRemovePost = async (id) => {\n    try {\n      const { data } = await postApi.remove(id);\n      const newPost = post.filter((posts) => posts.id !== id);\n      setPost(newPost);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n\n    // Thêm bài viết\n    const onAddPost = async (post) => {\n      console.log(post)\n      try {\n        const { data } = await postApi.create(post);\n        setPost([...post, data]);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n\n\n\n  return (\n    <Routers\n      products={products}\n      onRemove={onHandleRemove}\n      onAdd={onHandleAdd}\n      onUpdate={onHandleUpdate}\n\n      onAddCategory = {onHandleAddCategory}\n      onRemoveCategory = {onHandleRemoveCategory}\n      onUpdateCategory = {onHandleUpdateCategory}\n      category = {category}\n\n      post = {post}\n      onRemovePost = {onHandleRemovePost}\n      onAddPost = {onHandleAddPost}\n      \n    />\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}