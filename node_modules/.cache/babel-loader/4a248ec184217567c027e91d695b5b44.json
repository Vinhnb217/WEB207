{"ast":null,"code":"var _jsxFileName = \"E:\\\\PT14312-Web\\\\K\\u1EF3 6\\\\F\\\\react-basic-PT14312\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Routers from \"./routers\";\nimport apiRequest from \"./api/productApi\";\nimport categoryApi from \"./api/categoryApi\";\n\nfunction App() {\n  const [products, setProducts] = useState([apiRequest]);\n  const [category, setCategory] = useState([categoryApi]);\n  let history = useHistory(); // Danh sách sản phẩm\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getProducts();\n  }, []); // Xóa sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Thêm sản phẩm\n\n\n  const onHandleAdd = async product => {\n    console.log(product);\n\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Cập nhật Products\n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; //Category \n\n\n  useEffect(() => {\n    const getCatetogory = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategory(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n\n    getCatetogory();\n  }, []); // Add category\n\n  const onHandleAddCategory = async category => {\n    console.log(category);\n\n    try {\n      const {\n        data\n      } = await categoryApi.create(category);\n      setCategory([...category, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    onAddCategory: onHandleAddCategory,\n    category: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["E:/PT14312-Web/Kỳ 6/F/react-basic-PT14312/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","categoryApi","App","products","setProducts","category","setCategory","history","useHistory","getProducts","data","getAll","error","console","log","onHandleRemove","id","remove","newProducts","filter","product","onHandleAdd","create","onHandleUpdate","updateProducts","map","Products","update","getCatetogory","onHandleAddCategory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Routers from \"./routers\";\nimport apiRequest from \"./api/productApi\";\nimport categoryApi from \"./api/categoryApi\";\n\n\nfunction App() {\n  const [products, setProducts] = useState([apiRequest]);\n  const [category, setCategory] = useState([categoryApi]);\n  let history = useHistory();\n\n  // Danh sách sản phẩm\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log(\"failed to request API: \", error);\n      }\n    };\n    getProducts();\n  }, []);\n\n  // Xóa sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Thêm sản phẩm\n  const onHandleAdd = async (product) => {\n    console.log(product)\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n\n  // Cập nhật Products\n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n\n  //Category \n   \n    useEffect(() => {\n      const getCatetogory = async () => {\n        try {\n          const { data } = await categoryApi.getAll();\n          setCategory(data);\n        } catch (error) {\n          console.log(\"failed to request API: \", error);\n        }\n      };\n      getCatetogory();\n    }, []);\n\n  // Add category\n      const onHandleAddCategory = async (category) => {\n        console.log(category)\n        try {\n          const { data } = await categoryApi.create(category);\n          setCategory([...category, data]);\n        } catch (error) {\n          console.log(\"failed to request API: \", error);\n        }\n        console.log(data)};\n      \n\n\n\n\n  return (\n    <Routers\n      products={products}\n      onRemove={onHandleRemove}\n      onAdd={onHandleAdd}\n      onUpdate={onHandleUpdate}\n      onAddCategory = {onHandleAddCategory}\n      category = {category}\n    />\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}