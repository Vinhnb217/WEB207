{"ast":null,"code":"var _jsxFileName = \"E:\\\\PT14312-Web\\\\K\\u1EF3 6\\\\F\\\\react-basic-PT14312\\\\src\\\\pages\\\\views\\\\Admin\\\\Post\\\\EditPost.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Category from '../Category';\nimport Swal from 'sweetalert2';\n\nconst EditPost = ({\n  Post,\n  onUpdatePost\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let posts = Post.find(data => data.id == id);\n  const [currentPost, setCurrentPost] = useState(posts);\n  console.log(currentPost);\n\n  const onHandleSubmit = e => {\n    Swal.fire('Updated!', 'Your file has been updated.', 'success');\n    onUpdatePost(currentPost);\n    history.push(\"/admin/products\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentPost({ ...currentPost,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Ch\\u1EC9nh s\\u1EEDa b\\xE0i vi\\u1EBFt\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: currentPost.title,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"\\u1EA2nh s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: currentPost.image,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 38\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"content\",\n    defaultValue: currentPost.desc,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), errors.desc && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nEditPost.propTypes = {\n  products: PropTypes.array\n};\nexport default EditPost;","map":{"version":3,"sources":["E:/PT14312-Web/Ká»³ 6/F/react-basic-PT14312/src/pages/views/Admin/Post/EditPost.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","Category","Swal","EditPost","Post","onUpdatePost","register","handleSubmit","errors","id","history","posts","find","data","currentPost","setCurrentPost","console","log","onHandleSubmit","e","fire","push","onHandleChange","name","value","target","title","required","image","desc","color","propTypes","products","array"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Category from '../Category';\r\nimport Swal from 'sweetalert2';     \r\n\r\n    \r\n    const EditPost = ({ Post, onUpdatePost,  }) => {\r\n        const { register, handleSubmit, errors } = useForm();\r\n        let { id } = useParams();\r\n        let history = useHistory();\r\n        let posts = Post.find((data) => data.id == id);\r\n        const [currentPost, setCurrentPost] = useState(posts);\r\n        console.log(currentPost);\r\n        const onHandleSubmit = (e) => {\r\n            Swal.fire(\r\n                'Updated!',\r\n                'Your file has been updated.',\r\n                'success'\r\n            )\r\n            onUpdatePost(currentPost);\r\n          history.push(\"/admin/products\");\r\n        };\r\n        const onHandleChange = (e) => {\r\n          const { name, value } = e.target;\r\n          setCurrentPost({\r\n            ...currentPost,\r\n            [name]: value,\r\n          });\r\n        };\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\" >\r\n                <div className=\"form-group\">\r\n                <h3 className=\"card-title\">Chá»nh sá»­a bÃ i viáº¿t</h3>\r\n                    <label htmlFor=\"productName\">TiÃªu Äá»</label>\r\n                    <input type=\"text\" name=\"title\" value={currentPost.title} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.name && <span>This field is required</span>}\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">áº¢nh sáº£n pháº©m</label>\r\n                    <input type=\"text\" name=\"image\" value={currentPost.image} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })}/>\r\n                    {errors.image && <span>This field is required</span>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">MÃ´ táº£ sáº£n pháº©m</label>\r\n                    <textarea type=\"text\" name=\"content\" defaultValue={currentPost.desc} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                </div>\r\n                    {errors.desc && <span style={{ color: \"red\" }}>MÃ´ táº£ sáº£n pháº©m khÃ´ng ÄÆ°á»£c Äá» trá»ng</span>}\r\n                \r\n                <button className=\"btn btn-primary\">Cáº­p nháº­t</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nEditPost.propTypes = {\r\n    products: PropTypes.array\r\n}\r\n\r\nexport default EditPost"]},"metadata":{},"sourceType":"module"}