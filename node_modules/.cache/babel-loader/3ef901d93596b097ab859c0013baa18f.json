{"ast":null,"code":"var _jsxFileName = \"E:\\\\PT14312-Web\\\\K\\u1EF3 6\\\\F\\\\react-basic-PT14312\\\\src\\\\pages\\\\views\\\\Admin\\\\Products\\\\EditProducts.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Category from '../Category';\n\nconst EditProduct = ({\n  products,\n  onUpdate,\n  category\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let product = products.find(data => data.id == id);\n  const [currentProduct, setCurrentProduct] = useState(product);\n  console.log(currentProduct);\n\n  const onHandleSubmit = e => {\n    Swal.fire('Updated!', 'Your file has been updated.', 'success'); //   e.preventDefault();\n\n    onUpdate(currentProduct);\n    history.push(\"/admin/products\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentProduct({ ...currentProduct,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: currentProduct.name,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), errors.name && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"select\", {\n    type: \"text\",\n    name: \"category_id\",\n    defaultValue: currentProduct.category_id,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, category && category.map(({\n    id,\n    name\n  }, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"\\u1EA2nh s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    value: currentProduct.image,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 38\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Gi\\xE1 s\\u1EA3n ph\\u1EA9m\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: currentProduct.price,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), errors.price && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 38\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nEditProduct.propTypes = {\n  products: PropTypes.array\n};\nexport default EditProduct;","map":{"version":3,"sources":["E:/PT14312-Web/Ká»³ 6/F/react-basic-PT14312/src/pages/views/Admin/Products/EditProducts.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","Category","EditProduct","products","onUpdate","category","register","handleSubmit","errors","id","history","product","find","data","currentProduct","setCurrentProduct","console","log","onHandleSubmit","e","Swal","fire","push","onHandleChange","name","value","target","required","category_id","map","index","image","price","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Category from '../Category';\r\n\r\n    \r\n    const EditProduct = ({ products, onUpdate, category }) => {\r\n        const { register, handleSubmit, errors } = useForm();\r\n        let { id } = useParams();\r\n        let history = useHistory();\r\n        let product = products.find((data) => data.id == id);\r\n        const [currentProduct, setCurrentProduct] = useState(product);\r\n        console.log(currentProduct);\r\n        const onHandleSubmit = (e) => {\r\n            Swal.fire(\r\n                'Updated!',\r\n                'Your file has been updated.',\r\n                'success'\r\n            )\r\n    \r\n        //   e.preventDefault();\r\n          onUpdate(currentProduct);\r\n          history.push(\"/admin/products\");\r\n        };\r\n        const onHandleChange = (e) => {\r\n          const { name, value } = e.target;\r\n          setCurrentProduct({\r\n            ...currentProduct,\r\n            [name]: value,\r\n          });\r\n        };\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\" >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">TÃªn sáº£n pháº©m</label>\r\n                    <input type=\"text\" name=\"name\" value={currentProduct.name} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.name && <span>This field is required</span>}\r\n                </div>\r\n\r\n                <select type=\"text\" name=\"category_id\" defaultValue={currentProduct.category_id} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })}>\r\n                        {category && category.map(({ id, name }, index) => (\r\n                            <option value={id}>{name}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">áº¢nh sáº£n pháº©m</label>\r\n                    <input type=\"text\" name=\"image\" value={currentProduct.image} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })}/>\r\n                    {errors.image && <span>This field is required</span>}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">GiÃ¡ sáº£n pháº©m</label>\r\n                    <input type=\"text\" name=\"price\" value={currentProduct.price} onChange = {onHandleChange} className=\"form-control\" ref={register({ required: true })}/>\r\n                    {errors.price && <span>This field is required</span>}\r\n                </div>\r\n                <button className=\"btn btn-primary\">Cáº­p nháº­t</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nEditProduct.propTypes = {\r\n    products: PropTypes.array\r\n}\r\n\r\nexport default EditProduct"]},"metadata":{},"sourceType":"module"}